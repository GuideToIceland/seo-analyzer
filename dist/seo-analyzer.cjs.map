{"version":3,"file":"seo-analyzer.cjs","sources":["../src/rules/TitleLengthRule.js","../src/rules/ImgTagWithAltAttributeRule.js","../src/rules/ATagWithRelAttributeRule.js","../src/rules/CanonicalLinkRule.js","../src/rules/MetaBaseRule.js","../src/rules/MetaSocialRule.js","../src/rules/index.js","../src/modules/logger.js","../src/modules/scraper.js","../src/modules/input.js","../src/modules/analyzer.js","../src/modules/output.js","../src/server.js","../src/index.js","../src/modules/next-server.js"],"sourcesContent":["function titleLengthRule(dom, options) {\n  return new Promise(resolve => {\n    const document = dom.window.document;\n    const title = document.querySelector('title');\n    if (!title) {\n      resolve('This HTML is missing a <title> tag');\n    }\n    // If title exists in the DOM\n    const titleLength = title.length;\n    if (titleLength < options.min) {\n      resolve(\n        `<title> too short(${titleLength}). The minimum length should be ${options.min} characters.`\n      );\n    }\n    if (titleLength > options.max) {\n      resolve(\n        `<title> too long(${titleLength}). The maximum length should be ${options.max} characters.`\n      );\n    }\n    resolve(null);\n  });\n}\n\nexport default titleLengthRule;\n","function imgTagWithAltAttributeRule(dom) {\n  return new Promise(resolve => {\n    let countAlt = 0;\n    let countSrc = 0;\n    const report = [];\n    const elements = dom.window.document.querySelectorAll('img');\n\n    elements.forEach(element => {\n      if (!element.alt) {\n        countAlt++;\n      }\n      if (!element.src) {\n        countSrc++;\n      }\n    });\n\n    if (countSrc > 0) {\n      report.push(`There are ${countSrc} <img> tags without a src attribute`);\n    }\n\n    if (countAlt > 0) {\n      report.push(`There are ${countAlt} <img> tags without an alt attribute`);\n    }\n\n    if (countSrc || countAlt) {\n      resolve(report);\n    }\n\n    resolve(null);\n  });\n}\n\nexport default imgTagWithAltAttributeRule;\n","function ATagWithRelAttributeRule(dom) {\n  return new Promise(resolve => {\n    let count = 0;\n    const elements = dom.window.document.querySelectorAll('a');\n    elements.forEach(element => {\n      if (!element.rel) {\n        count++;\n      }\n    });\n    if (count > 0) {\n      resolve(`There are ${count} <a> tags without a rel attribute`);\n    }\n    resolve(null);\n  });\n}\n\nexport default ATagWithRelAttributeRule;\n","/**\n * Checks the presence and validity of the canonical link in the provided DOM.\n * @param {import('jsdom').JSDOM} dom The JSDOM object representing the HTML document.\n * @returns {Promise<string|null>} A promise that resolves with a string indicating an error message if\n * the canonical link is missing or invalid, otherwise resolves with null.\n */\nfunction canonicalLinkRule(dom) {\n  return new Promise(resolve => {\n    const element = dom.window.document.querySelector(\n      'head > link[rel=\"canonical\"]'\n    );\n    if (!element) {\n      resolve('This HTML is missing a <link rel=\"canonical\" href=\"...\"> link');\n    }\n    if (element && !element.href) {\n      resolve('The canonical link is missing an href attribute');\n    }\n    if (element && element.href.substr(-1) !== '/') {\n      resolve(\n        'The href attribute does not have a slash at the end of the link.'\n      );\n    }\n    resolve(null);\n  });\n}\n\nexport default canonicalLinkRule;\n","function metaBaseRule(dom, options = { list: [] }) {\n  return new Promise(resolve => {\n    const report = [];\n    if (options && options.names && options.names.length) {\n      options.names.forEach(name => {\n        const element = dom.window.document.querySelector(\n          `head > meta[name=\"${name}\"]`\n        );\n        if (!element) {\n          report.push(`This HTML is missing a <meta name=\"${name}\"> tag`);\n        } else if (!element.content) {\n          report.push(\n            `The content attribute for the <meta name=\"${name}\" content=\"\"> tag is empty`\n          );\n        }\n      });\n    }\n    resolve(report);\n  });\n}\n\nexport default metaBaseRule;\n","function metaSocialRule(dom, options = { properties: [] }) {\n  return new Promise(resolve => {\n    const report = [];\n    if (options && options.properties && options.properties.length) {\n      options.properties.forEach(property => {\n        const element = dom.window.document.querySelector(\n          `head > meta[property=\"${property}\"]`\n        );\n        if (!element) {\n          report.push(`This HTML is missing a <meta property=\"${property}\"> tag`);\n        } else if (!element.content) {\n          report.push(\n            `The content attribute for the <meta property=\"${property}\" content=\"\"> tag is empty`\n          );\n        }\n      });\n    }\n    resolve(report);\n  });\n}\n\nexport default metaSocialRule;\n","import titleLengthRule from './TitleLengthRule';\nimport imgTagWithAltAttributeRule from './ImgTagWithAltAttributeRule';\nimport aTagWithRelAttributeRule from './ATagWithRelAttributeRule';\nimport canonicalLinkRule from './CanonicalLinkRule';\nimport metaBaseRule from './MetaBaseRule';\nimport metaSocialRule from './MetaSocialRule';\n\nconst defaultRules = {\n  titleLengthRule,\n  imgTagWithAltAttributeRule,\n  aTagWithRelAttributeRule,\n  canonicalLinkRule,\n  metaBaseRule,\n  metaSocialRule\n};\n\nexport default defaultRules;\n","import CFonts from 'cfonts';\nimport _colors from 'colors';\n\nclass Logger {\n\n  /**\n   * @param {string} level\n   * @returns {Logger}\n   */\n  constructor(level) {\n    const levels = ['trace', 'debug', 'info', 'result', 'success', 'error'];\n    this.level = level === 'default' ? 2 : levels.indexOf(level);\n  }\n\n  /**\n   * Print formatted result to console\n   * @param {Array} - Array of reports\n   * @returns {Error} - Stop execution and print error\n   */\n  result(result, force = false) {\n    if (this.level > 3 && !force) {\n      return;\n    }\n    this._logResult(result);\n  }\n\n  /**\n   * Print error message to console\n   * @param {String} - Message\n   * @returns {String} - Print formatted message to console\n   */\n  error(error, exit) {\n    if (this.level > 5) {\n      return;\n    }\n    this._logError(error);\n    if (exit) process.exit(1);\n  }\n\n  /**\n   * Print success message to console\n   * @param {String} - Message\n   * @returns {String} - Print formatted message to console\n   */\n  success(success) {\n    if (this.level > 4) {\n      return;\n    }\n    this._logSuccess(success);\n  }\n\n  /**\n   * Print info message to console\n   * @param {String} - Message\n   * @returns {String} - Print formatted message to console\n   */\n  info(info) {\n    if (this.level > 2) {\n      return;\n    }\n    this._logInfo(info);\n  }\n\n  /**\n   * Print beautiful message to console\n   * @param {String} - Result message\n   * @returns {String} - Print CFonts message to console\n   */\n  printTextToConsole(text) {\n    if (this.level > 2) {\n      return;\n    }\n    const formattedText = text.replace(' ', '|');\n    CFonts.say(formattedText, {\n      font: 'block', // define the font face\n      align: 'left', // define text alignment\n      colors: ['system'], // define all colors\n      background: 'transparent', // define the background color, you can also use `backgroundColor` here as key\n      letterSpacing: 1, // define letter spacing\n      lineHeight: 1, // define the line height\n      space: true, // define if the output text should have empty lines on top and on the bottom\n      maxLength: '0', // define how many character can be on one line\n      gradient: false, // define your two gradient colors\n      independentGradient: false, // define if you want to recalculate the gradient for each new line\n      transitionGradient: false, // define if this is a transition between colors directly\n      env: 'node' // define the environment CFonts is being executed in\n    });\n  }\n\n  /**\n   * @param {Array} - Array of reports\n   * @returns {Error} - Stop execution and print error\n   * @private\n   * @memberof Logger\n   * @description Print result message to console\n   */\n  _logResult(result) {\n    if (!result.some(r => r.report.length))\n      return this._logSuccess('\\nüëç  No SEO defects detected.\\n');\n\n    this._logInfo('\\nüöÄ  Issue report');\n\n    for (const item of result) {\n      this._logInfo(`\\nSource: ${item.source.trim()}`);\n      this._logError(`${item.report.join('\\n')}`);\n    }\n\n    this._logSuccess(\n      '\\n-------- üöÄ Finished! --------\\nThanks for using Seo Analyzer!\\n'\n    );\n\n    return process.exit(1); // Stop process in terminal\n  }\n\n  /**\n   * @param {String} - Error object\n   * @returns {String} - Stop execution and print error\n   * @private\n   * @memberof Logger\n   * @description Print error message to console\n   */\n  _logError(error) {\n    console.error(`${_colors.red(error)}`);\n  }\n\n  /**\n   * @param {String} - Error object\n   * @returns {String} - Stop execution and print error\n   * @private\n   * @memberof Logger\n   * @description Print error message to console\n   */\n  _logInfo(info) {\n    console.log(`${_colors.yellow(info)}`);\n  }\n\n  /**\n   * @param {String} - Message\n   * @returns {String} - Print formatted message to console\n   * @private\n   * @memberof Logger\n   */\n  _logSuccess(success) {\n    console.log(`${_colors.green(success)}`);\n  }\n}\n\nexport default Logger;\n","import axios from 'axios';\nimport sitemaps from 'sitemap-stream-parser';\nimport cliProgress from 'cli-progress';\nimport _colors from 'colors';\nimport Logger from './logger';\n\nclass Scanner {\n  constructor(logger) {\n    this.logger = logger ?? new Logger();\n    this.consoleProgressBar = this.logger.level <= 4 && new cliProgress.Bar({\n      format:\n        'Processing... |' +\n        _colors.green('{bar}') +\n        '| {percentage}% || {value}/{total} Pages',\n      barCompleteChar: '\\u2588',\n      barIncompleteChar: '\\u2591',\n      hideCursor: true\n    });\n    this.inputUrl = '';\n    this.ignoreUrls = '';\n  }\n\n  /**\n   * @param {Number} port - Port for the server to listen on\n   * @returns {Array} - Array of html doms\n   * @description - Scrapes the site and returns the html doms\n   */\n  async run(port, urls, sitemap) {\n    this.inputUrl = `http://localhost:${port}`;\n    this.ignoreUrls = urls;\n    const links = await this._getLinksFromSitemap(sitemap);\n    const htmlDoms = await this._getHtmlDomFromLinks(links);\n    return htmlDoms;\n  }\n\n  /**\n   * Get the links from the sitemap\n   * @returns {Array} - Array of links\n   * @description - Scrapes the sitemap and returns the links\n   */\n  _getLinksFromSitemap(sitemap) {\n    this.logger.info(`üöÄ  Get sitemap from ${this.inputUrl}\\n`);\n    return new Promise(resolve => {\n      const formattedUrl = `${this.inputUrl}/${sitemap}`;\n      const links = [];\n      sitemaps.parseSitemaps(\n        formattedUrl,\n        link => {\n          // Ignore the links that are in the ignore list\n          const path = link.replace(/^.*\\/\\/[^/]+/, '');\n          if (this.ignoreUrls.indexOf(path) === -1) {\n            links.push(this._formatLink(link));\n          }\n        },\n        err => {\n          if (err) {\n            this.logger.error('‚ùå  Sitemap not found\\n', 1);\n          } else {\n            if (!links.length) {\n              this.logger.error('‚ùå  Links not found\\n', 1);\n            } else {\n              this.logger.success('‚úÖ  Done\\n');\n              resolve(links);\n            }\n          }\n        }\n      );\n    });\n  }\n\n  /**\n   * Formats the link to be used in axios\n   * @param {String} link\n   * @returns {String} - Formatted link > http://localhost:{port}/link\n   */\n  _formatLink(link) {\n    const result = link.replace(/^.*\\/\\/[^/]+/, this.inputUrl);\n    return result;\n  }\n\n  /**\n   * Sleep for the given time in milliseconds\n   * @param {Number} ms\n   * @returns {Promise}\n   */\n  sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  /**\n   * Get the html doms from the links\n   * @param {Array} links - Array of links\n   * @returns {Array} - Array of html doms\n   * @description - Scrapes the links and returns the html doms\n   */\n  async _getHtmlDomFromLinks(links) {\n    const htmlDoms = [];\n    const promises = [];\n    this.logger.info('üöÄ  Parsing HTML\\n');\n\n    // Start the progress bar\n    this.logger.level <= 4 && this.consoleProgressBar.start(links.length, 0);\n\n    for (const link of links) {\n      promises.push(\n        axios\n          .get(link)\n          .then(res => {\n            if (res && res.status === 200) {\n              htmlDoms.push({ source: link, text: res.data });\n            }\n          })\n          .catch(error => {\n            const err =\n              (error && error.response && error.response.status) || 500;\n            this.logger.error(`Error: ${error} - ${link}`);\n            this.logger.error(\n              `\\n${_colors.yellow('==>')} ${_colors.white(link)} ${_colors.red(\n                err\n              )}`\n            );\n          })\n          .finally(() => {\n            this.logger.level <= 4 && this.consoleProgressBar.increment();\n          })\n      );\n      await this.sleep(500);\n    }\n\n    return Promise.all(promises).then(() => {\n      // // Stop the progress bar\n      this.logger.level <= 4 && this.consoleProgressBar.stop();\n      return htmlDoms;\n    });\n  }\n}\n\nexport default Scanner;\n","import fs from 'fs';\nimport path from 'path';\nimport { JSDOM, VirtualConsole } from 'jsdom';\nimport cliProgress from 'cli-progress';\nimport _colors from 'colors';\nimport Logger from './logger';\nimport Scraper from './scraper';\n\n/**\n * @typedef {Array<JSDOM>} ListDom \n */\n\nclass Input {\n  constructor(logger) {\n    this.logger = logger ?? new Logger();\n    this.scraper = new Scraper(this.logger);\n    this.consoleProgressBar = this.logger.level <= 4 && new cliProgress.Bar({\n      format:\n        'Processing... |' +\n        _colors.green('{bar}') +\n        '| {percentage}% || {value}/{total} Folders',\n      barCompleteChar: '\\u2588',\n      barIncompleteChar: '\\u2591',\n      hideCursor: true\n    });\n    this.badType =\n      'The inputFiles function takes an array only [\"index.html\", \"...\", \"...\"]';\n    this.emptyList =\n      'You need to pass an array to the inputFiles function [\"index.html\", \"...\", \"...\"]';\n    this.ignoreFolders = [];\n    this.ignoreFiles = [];\n  }\n\n  /**\n   * Get the html from files\n   * @param {Array<string>} files [<string>, <string>, ...]\n   * @param ignoreFiles\n   * @returns {Promise<ListDom>} [{ window: {}, document: {}, ... }, { window: {}, document: {}, ... }, ...]\n   * @memberof Input\n   */\n  async files(files = [], ignoreFiles = []) {\n    if (!Array.isArray(files) || !files.length)\n      this.logger.error('‚ùå  The \"inputFiles\" method expects an array of files.\\n', true);\n\n    if (!Array.isArray(ignoreFiles))\n      this.logger.error('‚ùå  The \"ignoreFiles\" method expects an array of ignore files.\\n', true);\n\n    this.logger.info('\\nüöÄ  Parsing files\\n');\n    if (files.length === 0) {\n      this.logger.error(this.emptyList);\n    }\n    if (!Array.isArray(files)) {\n      this.logger.error(this.badType);\n    }\n    this.ignoreFiles = ignoreFiles;\n    const listTexts = await this._getHtml(files);\n    const listDOM = await this.getDom(listTexts);\n    return listDOM;\n  }\n\n  /**\n   * Get the html from files in folders\n   * @param {Array<string>} folders [<string>, <string>, ...]\n   * @param ignoreFolders\n   * @param ignoreFiles\n   * @returns {Promise<ListDom>} [{ window: {}, document: {}, ... }, { window: {}, document: {}, ... }, ...]\n   * @memberof Input\n   */\n  async folders(folders = [], ignoreFolders = [], ignoreFiles = []) {\n    if (!Array.isArray(folders) || !folders.length)\n      this.logger.error('‚ùå  The \"inputFolders\" method expects an array of folders.\\n', true);\n\n    if (!Array.isArray(ignoreFolders))\n      this.logger.error('‚ùå  The \"ignoreFolders\" method expects an array of ignore folders.\\n', true);\n\n    this.logger.info('üöÄ  Parsing folders\\n');\n\n    // Start the progress bar\n    this.logger.level <= 4 && this.consoleProgressBar.start(folders.length, 0);\n    this.ignoreFolders = ignoreFolders;\n    this.ignoreFiles = ignoreFiles;\n\n    const files = await this._getFilesFromFolders(folders);\n    const listDOM = await this.files(files, ignoreFiles);\n    return listDOM;\n  }\n\n  /**\n   * Get the DOM from urls\n   * @returns {Promise<ListDom>} [{ window: {}, document: {}, ... }, { window: {}, document: {}, ... }, ...]\n   * @param port\n   * @param ignoreUrls\n   */\n  async spa(port, ignoreUrls = [], sitemap) {\n    const listTexts = await this.scraper.run(port, ignoreUrls, sitemap);\n    const htmlDoms = await this.getDom(listTexts);\n    return htmlDoms;\n  }\n\n  /**\n   * Get all files from folders\n   * @param {Array<string>} folders [<string>, <string>, ...]\n   * @returns {Promise<Array<string>>} [<string>, <string>, ...]\n   * @private\n   * @example ['html', 'dist', 'src']\n   */\n  async _getFilesFromFolders(folders = []) {\n    const files = [];\n    for (const folder of folders) {\n      const result = await this._getFilesFromFolder(folder);\n\n      // Update the progress bar\n      this.logger.level <= 4 && this.consoleProgressBar.increment();\n\n      files.push(...result);\n    }\n\n    // Stop the progress bar\n    this.logger.level <= 4 && this.consoleProgressBar.stop();\n\n    if (!files.length) this.logger.error('\\n‚ùå  No files found.\\n', true);\n\n    return files;\n  }\n\n  /**\n   * Get files from folder\n   * @param {string} folder\n   * @returns {Promise<Array<string>>} [<string>, <string>, ...]\n   * @private\n   * @memberof Input\n   */\n  _getFilesFromFolder(folder = '') {\n    try {\n      const entryPaths = fs\n        .readdirSync(folder)\n        .map(entry => path.join(folder, entry));\n      const filePaths = entryPaths.filter(\n        entryPath =>\n          fs.statSync(entryPath).isFile() && path.extname(entryPath) === '.html'\n      );\n      const dirPaths = entryPaths.filter(\n        entryPath =>\n          !filePaths.includes(entryPath) && fs.statSync(entryPath).isDirectory()\n      );\n      const dirFiles = dirPaths\n        .filter(p => !this.ignoreFolders.includes(p))\n        .reduce(\n          (prev, curr) => prev.concat(this._getFilesFromFolder(curr)),\n          []\n        );\n      return [...filePaths, ...dirFiles];\n    } catch (error) {\n      this.logger.error(`\\n\\n‚ùå Folder \"${folder}\" not found\\n`);\n      return [];\n    }\n  }\n\n  /**\n   * Get the html from file\n   * @param {Array<string>} files [<string>, <string>, ...]\n   * @returns {Promise<Array<string>>} ['<html><body>...</body></html>', '<html><body>...</body></html>', ...]\n   * @private\n   * @memberof Input\n   */\n  _getHtml(files) {\n    const listTexts = [];\n    const proccess = this.logger.level <= 4 && new cliProgress.Bar({\n      format:\n        'Processing... |' +\n        _colors.green('{bar}') +\n        '| {percentage}% || {value}/{total} Sources',\n      barCompleteChar: '\\u2588',\n      barIncompleteChar: '\\u2591',\n      hideCursor: true\n    });\n\n    // Start the progress bar\n    this.logger.level <= 4 && proccess.start(files.length, 0);\n\n    files.forEach(file => {\n      if (this.ignoreFiles.includes(file)) return;\n      try {\n        const text = fs.readFileSync(file, 'utf8');\n        listTexts.push({ source: file, text });\n        this.logger.level <= 4 && proccess.increment();\n      } catch (error) {\n        this.logger.level <= 4 && proccess.increment();\n        this.logger.error(`\\n\\nFile \"${file}\" not found\\n`);\n      }\n    });\n    this.logger.level <= 4 && proccess.stop();\n    if (!listTexts.length) this.logger.error('\\n‚ùå  No files found.\\n', true);\n    return listTexts;\n  }\n\n  /**\n   * Transform html to DOM\n   * @param {Array<{text: string, source: string}>} list [{text: <string>, source: <string>}, {text: <string>, source: <string>}, ...]\n   * @returns {Promise<ListDom>} [{ window: {}, document: {}, ... }, { window: {}, document: {}, ... }, ...]\n   * @private\n   */\n  getDom(list) {\n    const doms = [];\n    const proccess = this.logger.level <= 4 && new cliProgress.Bar({\n      format:\n        'Handling html |' +\n        _colors.green('{bar}') +\n        '| {percentage}% || {value}/{total} Sources',\n      barCompleteChar: '\\u2588',\n      barIncompleteChar: '\\u2591',\n      hideCursor: true\n    });\n    this.logger.info('\\nüöÄ  Getting DOM from HTML\\n');\n    this.logger.level <= 4 && proccess.start(list.length, 0);\n    // NOTE: https://github.com/jsdom/jsdom/issues/2177#issuecomment-379212964\n    const virtualConsole = new VirtualConsole();\n    list.forEach(item => {\n      let dom = new JSDOM(item.text, { virtualConsole });\n      doms.push({ source: item.source, dom });\n      this.logger.level <= 4 && proccess.increment();\n    });\n\n    this.logger.level <= 4 && proccess.stop();\n    return doms;\n  }\n}\n\nexport default Input;\n","import cliProgress from 'cli-progress';\nimport _colors from 'colors';\n\nimport Logger from './logger';\n\n/**\n * Results returned by analyzer\n * @typedef {Array<{source: string, report: string}>} AnalyzerResult\n */\n\nclass Analyzer {\n  constructor(logger) {\n    this.logger = logger ?? new Logger();\n    this.consoleProgressBar = this.logger.level <= 4 && new cliProgress.Bar({\n      format:\n        'Running rules |' +\n        _colors.green('{bar}') +\n        '| {percentage}% || {value}/{total} Rules',\n      barCompleteChar: '\\u2588',\n      barIncompleteChar: '\\u2591',\n      hideCursor: true\n    });\n    this.badType =\n      'The inputFiles function takes an array only [\"index.html\", \"...\", \"...\"]';\n    this.emptyList =\n      'You need to pass an array to the inputFiles function [\"index.html\", \"...\", \"...\"]';\n  }\n\n  /**\n   * Run analyzer for a list of doms\n   * @param {JSDOM<array>} doms - The html dom list to run the rule on\n   * @param {Array} rules - The rules to run\n   * @returns {AnalyzerResult} - Array of error result [{ source, report }, { source, report }, { source, report }]\n   */\n  async run(inputData, rules) {\n    if (inputData.length === 0) {\n      this.logger.error(this.emptyList);\n    }\n    if (!Array.isArray(inputData)) {\n      this.logger.error(this.badType);\n    }\n    const report = await this._startAnalyzer(inputData, rules);\n    return report;\n  }\n\n  /**\n   * @param {Array} dataList - html doms\n   * @param {Array} rules - List rulers\n   * @returns {AnalyzerResult} - Array of reports [{source, report}, {source, report}, {source, report}]\n   */\n  async _startAnalyzer(dataList, rules) {\n    const result = [];\n    for (const item of dataList) {\n      this.logger.info(\n        `\\n${_colors.blue('==>')} Analysis ${_colors.white(item.source)}`\n      );\n\n      const report = await this._analyzeDOM(item.dom, rules);\n\n      if (report && report.length) {\n        result.push({\n          source: item.source,\n          report\n        });\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Run analyzer for a single dom\n   * @param {*} dom - The html dom element to run the rule on\n   * @param {*} rules - The rules to run\n   * @returns {Array<string>} - Array of error result ['error', 'error', 'error']\n   */\n  async _analyzeDOM(dom, rules) {\n    const result = [];\n    // Start the progress bar\n    this.logger.level <= 4 && this.consoleProgressBar.start(rules.length, 0);\n\n    for (const item of rules) {\n      let report = null;\n      try {\n        report = await item.rule(dom, item.options);\n      } catch (error) {\n        report = error;\n      }\n      if (Array.isArray(report)) {\n        result.push(...report);\n      } else {\n        if (report) {\n          result.push(report);\n        }\n      }\n\n      // Update the progress bar\n      this.logger.level <= 4 && this.consoleProgressBar.increment();\n    }\n\n    // Stop the progress bar\n    this.logger.level <= 4 && this.consoleProgressBar.stop();\n\n    return result;\n  }\n}\n\nexport default Analyzer;\n","import Analyzer from './analyzer';\n\nclass Output {\n  constructor(logger) {\n    this.analyzer = new Analyzer(logger);\n  }\n\n  /**\n   * @param {Array} data - List of files and folders\n   * @param {Array} rules - List of rules\n   * @returns {Promise} - Returns js object [{source, report}, ...]\n   */\n  async object(inputData, rules) {\n    const report = await this.analyzer.run(inputData, rules);\n    return report;\n  }\n\n  /**\n   * @param {Array} data - List of files and folders\n   * @param {Array} rules - List of rules\n   * @returns {JSON} - Returns json [{\"source\", \"report\"}, ...]\n   */\n  async json(inputData, rules) {\n    const report = await this.analyzer.run(inputData, rules);\n    return JSON.stringify(report, null, 2);\n  }\n}\n\nexport default Output;\n","import express from 'express';\nimport path from 'path';\nimport Logger from './modules/logger';\n\nconst app = express();\n\n/**\n * Start the server on the given port and use static files from the given path.\n * @param {String} folder - The path to the static files.\n * @param {Number} port - The port to start the server on.\n */\nexport function startServer(folder, port) {\n  const logger = new Logger();\n\n  app.use(express.static(folder));\n\n  // sendFile will go here\n  app.get('/', (req, res) => {\n    res.sendFile(path.join(__dirname, '/index.html'));\n  });\n\n  app.listen(port);\n\n  logger.info(`üöÄ  Server started on port ${port}\\n`);\n\n  logger.success('‚úÖ  Done\\n');\n}\n","import defaultRules from './rules/index';\n\nimport Input from './modules/input';\nimport Output from './modules/output';\nimport Logger from './modules/logger';\n\nimport { startServer } from './server';\n\n/**\n * @typedef {import('./modules/analyzer').AnalyzerResult} AnalyzerResult\n */\n\nclass SeoAnalyzer {\n  /**\n   * @param {object} options - The options object.\n   * @param {boolean} [options.verbose=true] - A flag indicating whether verbose mode is enabled.\n   * @returns {SeoAnalyzer}\n   */\n  constructor({ verbose = true }) {\n    this._logger = new Logger(verbose ? 'default' : 'error');\n    this._input = new Input(this._logger);\n    this._output = new Output(this._logger);\n    this._nextServer = null;\n    this._inputData = [];\n    this._defaultRules = defaultRules;\n    this._rules = [];\n    this._ignoreFolders = [];\n    this._ignoreFiles = [];\n    this._ignoreUrls = [];\n    return this;\n  }\n\n  // --------- Ignore methods --------- //\n  /**\n   * List of files to ignore.\n   * @param {Array<string>} files \n   * @returns {SeoAnalyzer}\n   */\n  ignoreFiles(files) {\n    this._ignoreFiles = files;\n    return this;\n  }\n\n  /**\n   * List of directories to ignore.\n   * @param {Array<string>} folders \n   * @returns {SeoAnalyzer}\n   */\n  ignoreFolders(folders) {\n    this._ignoreFolders = folders;\n    return this;\n  }\n\n  /**\n   * List of urls to be ignored\n   * @param {Array<string>} urls to be ignored \n   * @returns {SeoAnalyzer}\n   */\n  ignoreUrls(urls) {\n    this._ignoreUrls = urls;\n    return this;\n  }\n\n  // ------- Input methods ------- //\n  /**\n   * Files to analyze\n   * @param {Array<string>} files \n   * @returns {Promise<SeoAnalyzer>}\n   */\n  async inputFiles(files) {\n    if (this._inputData.length !== 0) return this;\n    this._logger.printTextToConsole('SEO Analyzer');\n    this._inputData = await this._input.files(files, this._ignoreFiles);\n    return this;\n  }\n\n  /**\n   * Directories to analyze\n   * @param {Array<string>} folders \n   * @returns {Promise<SeoAnalyzer>}\n   */\n  async inputFolders(folders) {\n    if (this._inputData.length !== 0) return this;\n    this._logger.printTextToConsole('SEO Analyzer');\n    this._inputData = await this._input.folders(\n      folders,\n      this._ignoreFolders,\n      this._ignoreFiles\n    );\n    return this;\n  }\n\n  /**\n   * Spa folder to analyze\n   * @param {Array<string>} folder \n   * @returns {Promise<SeoAnalyzer>}\n   */\n  async inputSpaFolder(folder, sitemap='sitemap.xml', port = 9999) {\n    if (!this._inputData) return this;\n    this._logger.printTextToConsole('SEO Analyzer');\n    // Run server for spa\n    startServer(folder, port);\n    this._inputData = await this._input.spa(port, this._ignoreUrls, sitemap);\n    return this;\n  }\n\n  /**\n   * Scan Next server\n   * @param {string} sitemap Path to sitemap in xml format\n   * @param {number} port Port Next server listens on\n   * @returns {Promise<SeoAnalyzer>}\n   */\n  async inputNextJs(sitemap = 'sitemap.xml', port = 3000) {\n    if (!this._inputData) return this;\n    if (!this._nextServer) {\n      const { default: NextServer }  = await import('./modules/next-server');\n      this._nextServer = new NextServer(this._logger);\n      await this._nextServer.setup();\n    }\n    this._logger.printTextToConsole('SEO Analyzer');\n    this._inputData = await this._nextServer.inputSSR(port, this._ignoreUrls, sitemap);\n    return this;\n  }\n\n  /**\n   * Input plain HTML strings in {text, source} format to analyze\n   * @param {Array<{text: string, source: string}>} inputHTMLs `text` is the plain html, `source` is an identifier such a URI\n   * @returns {SeoAnalyzer}\n   */\n  inputHTMLStrings(inputHTMLs) {\n    if (this._inputData.length !== 0) return this;\n    if (!inputHTMLs || !inputHTMLs.length \n      || inputHTMLs.some(html => typeof html.text === 'undefined' || typeof html.source === 'undefined')) {\n      const error = `Invalid input ${inputHTMLs}`;\n      this._logger.error(error);\n      throw error;\n    }\n    this._logger.printTextToConsole('SEO Analyzer');\n    this._inputData = this._input.getDom(inputHTMLs);\n    return this;\n  }\n\n  // --------- Add Rule --------- //\n  /**\n   * Adds a rule to the SEO analyzer.\n   * @param {string|Function} rule The default rule or a custom rule function.\n   * @param {object} [options={}] Additional options for the rule.\n   * @returns {this} The SEO analyzer instance for method chaining.\n   */\n  addRule(rule, options = {}) {\n    if (typeof rule === 'string') {\n      if (rule in defaultRules) {\n        this._rules.push({ rule: defaultRules[rule], options });\n      } else {\n        this._logger.error(`\\n\\n‚ùå  Rule \"${rule}\" not found\\n`, 1);\n      }\n    } else if (typeof rule === 'function') {\n      this._rules.push({ rule, options });\n    } else {\n      this._logger.error('\\n\\n‚ùå  Rule must be a function or a string\\n', 1);\n    }\n    return this;\n  }\n\n  // ------- Output methods ------- //\n  /**\n   * Logs object to console asynchronously and returns itself\n   * @returns {SeoAnalyzer}\n   */\n  outputConsole() {\n    (async () => {\n      const json = await this._output.object(this._inputData, this._rules);\n      this._logger.result(json, true);\n    })();\n    return this;\n  }\n\n  /**\n   * Returns itself and calls a callback on the output's json string\n   * @param {function(string): void}\n   * @returns {SeoAnalyzer}\n   */\n  outputJson(callback) {\n    (async () => {\n      const json = await this._output.json(this._inputData, this._rules);\n      callback(json);\n    })();\n    return this;\n  }\n\n  /**\n   * Returns the JSON output asynchronously\n   * @returns {Promise<string>}\n   */\n  async outputJsonAsync() {\n    return this._output.json(this._inputData, this._rules);\n  }\n\n  /**\n   * Returns itself and calls a callback on the output's object\n   * @param {function(AnalyzerResult): void}\n   * @returns {SeoAnalyzer}\n   */  \n  outputObject(callback) {\n    (async () => {\n      const obj = await this._output.object(this._inputData, this._rules);\n      callback(obj);\n    })();\n    return this;\n  }\n\n  /**\n   * Returns the object asynchronously\n   * @returns {Promise<AnalyzerResult>}\n   */\n  async outputObjectAsync() {\n    return this._output.object(this._inputData, this._rules);\n  }\n}\n\nexport default SeoAnalyzer;\n","import express from 'express';\nimport Logger from './logger';\nimport Input from './input';\n\nclass NextServer {\n  constructor(logger) {\n    this.logger = logger ?? new Logger();\n    this._input = new Input(logger);\n    this.app = {};\n    this.handle = {};\n    this.status = {};\n    this.port = parseInt(process.env.PORT, 10) || 3000;\n  }\n\n  async setup() {\n    const { default: next } = await import('next');\n    this.app = next({ dev: false });\n    this.handle = this.app.getRequestHandler();\n  }\n\n  /**\n   * Run Next js server\n   * @returns {Promise<unknown>}\n   */\n  run() {\n    return new Promise((resolve, reject) => {\n      this.app.prepare()\n        .then(() => {\n          const server = express();\n\n          server.all('*', (req, res) => {\n            return this.handle(req, res);\n          });\n\n          server.listen(this.port, err => {\n            if (err) throw err;\n            this.logger.info(`üöÄ  Ready on http://localhost:${this.port}\\n`);\n            resolve({ status: 'Active' });\n          });\n        })\n        .catch(ex => {\n          this.logger.error('‚ùå  Error Starting Server\\n');\n          console.error(ex.stack);\n          process.exit(1);\n          reject(new Error('Error Starting Server'));\n        });\n    });\n  }\n\n  /**\n   * Run server for next js.\n   * Get the DOM from urls\n   * @param {number} port\n   * @param ignoreUrls\n   * @returns {Promise<Promise.Array>}\n   */\n  async inputSSR(port, ignoreUrls = [], sitemap) {\n    this.port = port;\n    this.status = await this.run();\n    const inputResult = this._input.spa(this.port, ignoreUrls, sitemap);\n    return inputResult;\n  }\n}\n\nexport default NextServer;\n"],"names":["aTagWithRelAttributeRule","Scraper","VirtualConsole","JSDOM"],"mappings":"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"}